plugins {
    id 'java'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
}

group 'cs4120.cyr7'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'dependencies', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

jar {
    manifest {
        attributes "Main-Class": "cyr7.cli.CLI"
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {
    main({
        java {
            srcDirs = ['src/java']
        }
        kotlin {
            srcDirs = ['src/java']
        }
        resources {
            srcDirs = ['src/resources']
        }
    })
    test {
        java {
            srcDirs = ['tests/java']
        }
        resources {
            srcDirs = ['tests/resources']
        }
    }
}

test {
    useJUnitPlatform {
        excludeTags 'benchmark'
    }
    enableAssertions = true
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
    finalizedBy jacocoTestReport
}

task coreTest(type: Test) {
    dependsOn assemble
    useJUnitPlatform {
        includeTags 'core'
    }
    enableAssertions = true
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

task benchmark(type: Test) {
    dependsOn assemble
    useJUnitPlatform {
        includeTags 'benchmark'
    }
    enableAssertions = true
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
